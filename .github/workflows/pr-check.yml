name: PR Check

on:
  pull_request:
    types: [opened, synchronize, reopened]

env:
  NODE_VERSION: '22'

permissions:
  contents: read
  pull-requests: write # Allow commenting on PRs

jobs:
  # Quick checks for PRs
  pr-validation:
    name: PR Validation
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm install --no-audit --no-fund
        
      - name: Run linting
        id: lint
        run: |
          npm run lint 2>&1 | tee lint-output.txt || true
          if [ ${PIPESTATUS[0]} -eq 0 ]; then
            echo "lint_status=‚úÖ Passed" >> $GITHUB_OUTPUT
          else
            echo "lint_status=‚ö†Ô∏è Has warnings" >> $GITHUB_OUTPUT
          fi
          
      - name: Type check
        id: typecheck
        run: |
          npx tsc --noEmit 2>&1 | tee typecheck-output.txt || true
          if [ ${PIPESTATUS[0]} -eq 0 ]; then
            echo "type_status=‚úÖ Passed" >> $GITHUB_OUTPUT
          else
            echo "type_status=‚ö†Ô∏è Has warnings" >> $GITHUB_OUTPUT
          fi
          
      - name: Build Next.js
        id: build
        run: |
          npm run build 2>&1 | tee build-output.txt
          
          # Calculate build size
          BUILD_SIZE=$(du -sh .next 2>/dev/null | cut -f1 || echo "N/A")
          echo "build_size=$BUILD_SIZE" >> $GITHUB_OUTPUT
          
          # Count pages
          PAGE_COUNT=$(find .next/server/app -name "*.html" 2>/dev/null | wc -l || echo "0")
          echo "page_count=$PAGE_COUNT" >> $GITHUB_OUTPUT
          
      - name: Docker build check
        id: docker
        run: |
          # Build Docker image without pushing
          docker build -t pr-test:${{ github.event.pull_request.number }} . || exit 1
          
          # Get image size
          IMAGE_SIZE=$(docker images pr-test:${{ github.event.pull_request.number }} --format "{{.Size}}")
          echo "image_size=$IMAGE_SIZE" >> $GITHUB_OUTPUT
          echo "docker_status=‚úÖ Builds successfully" >> $GITHUB_OUTPUT
        continue-on-error: true
        
      - name: Comment PR
        uses: actions/github-script@v7
        if: always()
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            
            // Get job outputs
            const lintStatus = '${{ steps.lint.outputs.lint_status }}' || '‚ùå Failed';
            const typeStatus = '${{ steps.typecheck.outputs.type_status }}' || '‚ùå Failed';
            const buildSize = '${{ steps.build.outputs.build_size }}' || 'Unknown';
            const pageCount = '${{ steps.build.outputs.page_count }}' || '0';
            const imageSize = '${{ steps.docker.outputs.image_size }}' || 'N/A';
            const dockerStatus = '${{ steps.docker.outputs.docker_status }}' || '‚ùå Failed';
            
            // Create comment body
            const body = `## üìä PR Build Report
            
            ### Check Results
            | Check | Status |
            |-------|--------|
            | ESLint | ${lintStatus} |
            | TypeScript | ${typeStatus} |
            | Next.js Build | ‚úÖ Success |
            | Docker Build | ${dockerStatus} |
            
            ### Build Metrics
            | Metric | Value |
            |--------|-------|
            | Build Size | ${buildSize} |
            | Page Count | ${pageCount} |
            | Docker Image Size | ${imageSize} |
            
            ### Details
            - **Node Version:** ${{ env.NODE_VERSION }}
            - **Branch:** ${{ github.head_ref }}
            - **Commit:** ${{ github.event.pull_request.head.sha }}
            
            ---
            <sub>ü§ñ This comment is automatically generated by CI/CD pipeline</sub>`;
            
            // Find existing comment
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('PR Build Report')
            );
            
            // Update or create comment
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: body
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: body
              });
            }

  # Dependency check for PRs
  dependency-check:
    name: Dependency Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
        
      - name: Check for dependency changes
        id: dep-check
        run: |
          # Check if package.json or package-lock.json changed
          if git diff --name-only origin/${{ github.base_ref }}..HEAD | grep -E "package(-lock)?\.json"; then
            echo "deps_changed=true" >> $GITHUB_OUTPUT
            echo "üì¶ Dependencies changed in this PR" >> $GITHUB_STEP_SUMMARY
            
            # Run audit for new dependencies
            npm audit --production --audit-level=moderate || true
          else
            echo "deps_changed=false" >> $GITHUB_OUTPUT
            echo "‚úÖ No dependency changes" >> $GITHUB_STEP_SUMMARY
          fi
          
  # Performance check (optional)
  performance-check:
    name: Bundle Size Check
    runs-on: ubuntu-latest
    continue-on-error: true
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm install --no-audit --no-fund
        
      - name: Analyze bundle
        run: |
          # Build and analyze
          npm run build
          
          # Get bundle stats
          echo "## Bundle Analysis üì¶" >> $GITHUB_STEP_SUMMARY
          
          # Check for large files
          find .next -type f -size +500k -exec ls -lh {} \; | while read -r line; do
            echo "‚ö†Ô∏è Large file detected: $line" >> $GITHUB_STEP_SUMMARY
          done || echo "‚úÖ No unusually large files detected" >> $GITHUB_STEP_SUMMARY