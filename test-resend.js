// –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã Resend API
const { Resend } = require('resend');

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
require('dotenv').config({ path: '.env.local' });

const resend = new Resend(process.env.RESEND_API_KEY);

async function testResend() {
  console.log('üöÄ –¢–µ—Å—Ç–∏—Ä—É–µ–º Resend API...');
  console.log('API Key:', process.env.RESEND_API_KEY ? '–ù–∞–π–¥–µ–Ω ‚úÖ' : '–ù–ï –ù–ê–ô–î–ï–ù ‚ùå');
  
  if (!process.env.RESEND_API_KEY) {
    console.error('‚ùå RESEND_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env.local');
    return;
  }

  try {
    // –¢–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ
    const { data, error } = await resend.emails.send({
      from: '–í–¢–ë HR Assistant <onboarding@resend.dev>', // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –¥–æ–º–µ–Ω Resend
      to: ['test@example.com'], // –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—É—á–∞—Ç–µ–ª—å
      subject: 'üéØ –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∏—Å—å–º–∞ –∏–∑ –í–¢–ë AI HR Assistant',
      html: `
        <h2>–¢–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ</h2>
        <p>–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Resend API.</p>
        <p><strong>–í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏:</strong> ${new Date().toLocaleString('ru-RU')}</p>
        <p>–ï—Å–ª–∏ –≤—ã –ø–æ–ª—É—á–∏–ª–∏ —ç—Ç–æ –ø–∏—Å—å–º–æ, –∑–Ω–∞—á–∏—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç! ‚úÖ</p>
      `,
    });

    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–∏—Å—å–º–∞:', error);
      return;
    }

    console.log('‚úÖ –ü–∏—Å—å–º–æ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!');
    console.log('üìß ID –ø–∏—Å—å–º–∞:', data?.id);
    console.log('üìä –î–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç–∞:', data);

  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testResend();
